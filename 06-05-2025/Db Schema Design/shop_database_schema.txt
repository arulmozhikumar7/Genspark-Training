Design the database for a shop which sells products
Points for consideration
  1. One product can be supplied by many suppliers
  2. One supplier can supply many products
  3. All customers details have to present
  4. A customer can buy more than one product in every purchase
  5. Bill for every purchase has to be stored
  6. These are just details of one shop
 
categories
id, name, status
 
country
id, name
 
state
id, name, country_id
 
City
id, name, state_id
 
area
zipcode, name, city_id
 
address
id, door_number, addressline1, zipcode
 
supplier
id, name, contact_person, phone, email, address_id, status
 
product
id, Name, unit_price, quantity, description, image
 
product_supplier
transaction_id, product_id, supplier_id, date_of_supply, quantity,
 
Customer
id, Name, Phone, age, address_id
 
order
  order_number, customer_id, Date_of_order, amount, order_status
 
order_details
  id, order_number, product_id, quantity, unit_price

DDL

-- Categories Table
CREATE TABLE Categories (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    status ENUM('active', 'inactive') DEFAULT 'active'
);

-- Countries Table
CREATE TABLE Countries (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL
);

-- States Table
CREATE TABLE States (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    country_id INT NOT NULL,
    FOREIGN KEY (country_id) REFERENCES Countries(id)
);

-- Cities Table
CREATE TABLE Cities (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    state_id INT NOT NULL,
    FOREIGN KEY (state_id) REFERENCES States(id)
);

-- Areas Table
CREATE TABLE Areas (
    zipcode VARCHAR(10) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    city_id INT NOT NULL,
    FOREIGN KEY (city_id) REFERENCES Cities(id)
);

-- Addresses Table
CREATE TABLE Addresses (
    id INT PRIMARY KEY AUTO_INCREMENT,
    door_number VARCHAR(50),
    addressline1 VARCHAR(255),
    zipcode VARCHAR(10) NOT NULL,
    FOREIGN KEY (zipcode) REFERENCES Areas(zipcode)
);

-- Suppliers Table
CREATE TABLE Suppliers (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    contact_person VARCHAR(100),
    phone VARCHAR(15),
    email VARCHAR(100),
    address_id INT NOT NULL,
    status ENUM('active', 'inactive') DEFAULT 'active',
    FOREIGN KEY (address_id) REFERENCES Addresses(id)
);

-- Products Table
CREATE TABLE Products (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    quantity INT NOT NULL,
    description TEXT,
    image VARCHAR(255),
    category_id INT,
    FOREIGN KEY (category_id) REFERENCES Categories(id)
);

-- ProductSuppliers Table
CREATE TABLE ProductSuppliers (
    id INT PRIMARY KEY AUTO_INCREMENT,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    date_of_supply DATE,
    quantity INT,
    FOREIGN KEY (product_id) REFERENCES Products(id),
    FOREIGN KEY (supplier_id) REFERENCES Suppliers(id)
);

-- Customers Table
CREATE TABLE Customers (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100),
    phone VARCHAR(15),
    age INT,
    address_id INT,
    FOREIGN KEY (address_id) REFERENCES Addresses(id)
);

-- Orders Table
CREATE TABLE Orders (
    order_number INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT NOT NULL,
    date_of_order DATE NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    order_status ENUM('pending', 'shipped', 'delivered', 'cancelled') DEFAULT 'pending',
    FOREIGN KEY (customer_id) REFERENCES Customers(id)
);

-- OrderDetails Table
CREATE TABLE OrderDetails (
    id INT PRIMARY KEY AUTO_INCREMENT,
    order_number INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    total_price AS (quantity * unit_price) STORED,
    FOREIGN KEY (order_number) REFERENCES Orders(order_number),
    FOREIGN KEY (product_id) REFERENCES Products(id)
);
